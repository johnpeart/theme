// Light mode

.hll { background-color: map-get($colors, "gray-700") }
.c { color: map-get($colors, "gray-600"); font-style: italic } /* Comment */
.err { color: map-get($colors, "red"); background-color: #e3d2d2 } /* Error */
.g { color: map-get($colors, "gray-800") } /* Generic */
.k { color: darken(map-get($colors, "green"), 10%); font-weight: bold } /* Keyword */
.l { color: map-get($colors, "gray-800") } /* Literal */
.n { color: map-get($colors, "gray-800") } /* Name */
.o { color: map-get($colors, "gray-800") } /* Operator */
.x { color: map-get($colors, "gray-800") } /* Other */
.p { color: map-get($colors, "gray-800") } /* Punctuation */
.cm { color: map-get($colors, "gray-600"); font-style: italic } /* Comment.Multiline */
.cp { color: map-get($colors, "red"); font-weight: bold } /* Comment.Preproc */
.c1 { color: map-get($colors, "gray-600"); font-style: italic } /* Comment.Single */
.cs { color: map-get($colors, "red"); font-weight: bold; background-color: #520000 } /* Comment.Special */
.gd { color: map-get($colors, "red") } /* Generic.Deleted */
.ge { color: map-get($colors, "gray-800"); font-style: italic } /* Generic.Emph */
.gr { color: map-get($colors, "red") } /* Generic.Error */
.gh { color: map-get($colors, "white"); font-weight: bold } /* Generic.Heading */
.gi { color: map-get($colors, "red") } /* Generic.Inserted */
.go { color: map-get($colors, "gray-400") } /* Generic.Output */
.gp { color: map-get($colors, "gray-400") } /* Generic.Prompt */
.gs { color: map-get($colors, "gray-800"); font-weight: bold } /* Generic.Strong */
.gu { color: map-get($colors, "white"); text-decoration: underline } /* Generic.Subheading */
.gt { color: map-get($colors, "red") } /* Generic.Traceback */
.kc { color: darken(map-get($colors, "green"), 10%); font-weight: bold } /* Keyword.Constant */
.kd { color: darken(map-get($colors, "green"), 10%); font-weight: bold } /* Keyword.Declaration */
.kn { color: darken(map-get($colors, "green"), 10%); font-weight: bold } /* Keyword.Namespace */
.kp { color: darken(map-get($colors, "green"), 10%) } /* Keyword.Pseudo */
.kr { color: darken(map-get($colors, "green"), 10%); font-weight: bold } /* Keyword.Reserved */
.kt { color: darken(map-get($colors, "green"), 10%); font-weight: bold } /* Keyword.Type */
.ld { color: map-get($colors, "gray-800") } /* Literal.Date */
.m { color: map-get($colors, "blue") } /* Literal.Number */
.s { color: map-get($colors, "orange") } /* Literal.String */
.na { color: map-get($colors, "gray-800") } /* Name.Attribute */
.nb { color: map-get($colors, "cyan") } /* Name.Builtin */
.nc { color: map-get($colors, "blue"); text-decoration: underline } /* Name.Class */
.no { color: map-get($colors, "cyan") } /* Name.Constant */
.nd { color: map-get($colors, "orange") } /* Name.Decorator */
.ni { color: map-get($colors, "gray-800") } /* Name.Entity */
.ne { color: map-get($colors, "gray-400") } /* Name.Exception */
.nf { color: map-get($colors, "blue") } /* Name.Function */
.nl { color: map-get($colors, "gray-800") } /* Name.Label */
.nn { color: map-get($colors, "blue"); text-decoration: underline } /* Name.Namespace */
.nx { color: map-get($colors, "gray-800") } /* Name.Other */
.py { color: map-get($colors, "gray-800") } /* Name.Property */
.nt { color: darken(map-get($colors, "green"), 10%); font-weight: bold } /* Name.Tag */
.nv { color: map-get($colors, "cyan") } /* Name.Variable */
.ow { color: darken(map-get($colors, "green"), 10%); font-weight: bold } /* Operator.Word */
.w { color: map-get($colors, "gray-600") } /* Text.Whitespace */
.mf { color: map-get($colors, "blue") } /* Literal.Number.Float */
.mh { color: map-get($colors, "blue") } /* Literal.Number.Hex */
.mi { color: map-get($colors, "blue") } /* Literal.Number.Integer */
.mo { color: map-get($colors, "blue") } /* Literal.Number.Oct */
.sb { color: map-get($colors, "orange") } /* Literal.String.Backtick */
.sc { color: map-get($colors, "orange") } /* Literal.String.Char */
.sd { color: map-get($colors, "orange") } /* Literal.String.Doc */
.s2 { color: map-get($colors, "orange") } /* Literal.String.Double */
.se { color: map-get($colors, "orange") } /* Literal.String.Escape */
.sh { color: map-get($colors, "orange") } /* Literal.String.Heredoc */
.si { color: map-get($colors, "orange") } /* Literal.String.Interpol */
.sx { color: map-get($colors, "orange") } /* Literal.String.Other */
.sr { color: map-get($colors, "orange") } /* Literal.String.Regex */
.s1 { color: map-get($colors, "orange") } /* Literal.String.Single */
.ss { color: map-get($colors, "orange") } /* Literal.String.Symbol */
.bp { color: map-get($colors, "cyan") } /* Name.Builtin.Pseudo */
.vc { color: map-get($colors, "cyan") } /* Name.Variable.Class */
.vg { color: map-get($colors, "cyan") } /* Name.Variable.Global */
.vi { color: map-get($colors, "cyan") } /* Name.Variable.Instance */
.il { color: map-get($colors, "blue") } /* Literal.Number.Integer.Long */

// Dark mode

@include darkMode() { 
	.hll { background-color: map-get($colors, "gray-200") }
	.c { color:  map-get($colors, "gray-300"); font-style: italic } /* Comment */
	.err { color: lighten(map-get($colors, "red"), 30%); background-color: #e3d2d2 } /* Error */
	.g { color:  map-get($colors, "gray-200") } /* Generic */
	.k { color: lighten(map-get($colors, "green"), 30%); font-weight: bold } /* Keyword */
	.l { color:  map-get($colors, "gray-200") } /* Literal */
	.n { color:  map-get($colors, "gray-200") } /* Name */
	.o { color:  map-get($colors, "gray-200") } /* Operator */
	.x { color:  map-get($colors, "gray-200") } /* Other */
	.p { color:  map-get($colors, "gray-200") } /* Punctuation */
	.cm { color:  map-get($colors, "gray-300"); font-style: italic } /* Comment.Multiline */
	.cp { color: lighten(map-get($colors, "red"), 30%); font-weight: bold } /* Comment.Preproc */
	.c1 { color:  map-get($colors, "gray-300"); font-style: italic } /* Comment.Single */
	.cs { color: lighten(map-get($colors, "red"), 30%); font-weight: bold; background-color: #520000 } /* Comment.Special */
	.gd { color: lighten(map-get($colors, "red"), 30%) } /* Generic.Deleted */
	.ge { color:  map-get($colors, "gray-200"); font-style: italic } /* Generic.Emph */
	.gr { color: lighten(map-get($colors, "red"), 30%) } /* Generic.Error */
	.gh { color: map-get($colors, "white"); font-weight: bold } /* Generic.Heading */
	.gi { color: lighten(map-get($colors, "red"), 30%) } /* Generic.Inserted */
	.go { color: map-get($colors, "gray-400") } /* Generic.Output */
	.gp { color: map-get($colors, "gray-400") } /* Generic.Prompt */
	.gs { color:  map-get($colors, "gray-200"); font-weight: bold } /* Generic.Strong */
	.gu { color: map-get($colors, "white"); text-decoration: underline } /* Generic.Subheading */
	.gt { color: lighten(map-get($colors, "red"), 30%) } /* Generic.Traceback */
	.kc { color: lighten(map-get($colors, "green"), 30%); font-weight: bold } /* Keyword.Constant */
	.kd { color: lighten(map-get($colors, "green"), 30%); font-weight: bold } /* Keyword.Declaration */
	.kn { color: lighten(map-get($colors, "green"), 30%); font-weight: bold } /* Keyword.Namespace */
	.kp { color: lighten(map-get($colors, "green"), 30%) } /* Keyword.Pseudo */
	.kr { color: lighten(map-get($colors, "green"), 30%); font-weight: bold } /* Keyword.Reserved */
	.kt { color: lighten(map-get($colors, "green"), 30%); font-weight: bold } /* Keyword.Type */
	.ld { color:  map-get($colors, "gray-200") } /* Literal.Date */
	.m { color: lighten(map-get($colors, "blue"), 30%) } /* Literal.Number */
	.s { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String */
	.na { color:  map-get($colors, "gray-200") } /* Name.Attribute */
	.nb { color: lighten(map-get($colors, "cyan"), 30%) } /* Name.Builtin */
	.nc { color: lighten(map-get($colors, "blue"), 30%); text-decoration: underline } /* Name.Class */
	.no { color: lighten(map-get($colors, "cyan"), 30%) } /* Name.Constant */
	.nd { color: lighten(map-get($colors, "orange"), 20%) } /* Name.Decorator */
	.ni { color:  map-get($colors, "gray-200") } /* Name.Entity */
	.ne { color: map-get($colors, "gray-400") } /* Name.Exception */
	.nf { color: lighten(map-get($colors, "blue"), 30%) } /* Name.Function */
	.nl { color:  map-get($colors, "gray-200") } /* Name.Label */
	.nn { color: lighten(map-get($colors, "blue"), 30%); text-decoration: underline } /* Name.Namespace */
	.nx { color:  map-get($colors, "gray-200") } /* Name.Other */
	.py { color:  map-get($colors, "gray-200") } /* Name.Property */
	.nt { color: lighten(map-get($colors, "green"), 30%); font-weight: bold } /* Name.Tag */
	.nv { color: lighten(map-get($colors, "cyan"), 30%) } /* Name.Variable */
	.ow { color: lighten(map-get($colors, "green"), 30%); font-weight: bold } /* Operator.Word */
	.w { color:  map-get($colors, "gray-300") } /* Text.Whitespace */
	.mf { color: lighten(lighten(map-get($colors, "blue"), 30%), 30%) } /* Literal.Number.Float */
	.mh { color: lighten(lighten(map-get($colors, "blue"), 30%), 30%) } /* Literal.Number.Hex */
	.mi { color: lighten(map-get($colors, "blue"), 30%) } /* Literal.Number.Integer */
	.mo { color: lighten(map-get($colors, "blue"), 30%) } /* Literal.Number.Oct */
	.sb { color: lighten(lighten(map-get($colors, "orange"), 20%), 30%) } /* Literal.String.Backtick */
	.sc { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Char */
	.sd { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Doc */
	.s2 { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Double */
	.se { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Escape */
	.sh { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Heredoc */
	.si { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Interpol */
	.sx { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Other */
	.sr { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Regex */
	.s1 { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Single */
	.ss { color: lighten(map-get($colors, "orange"), 20%) } /* Literal.String.Symbol */
	.bp { color: lighten(map-get($colors, "cyan"), 30%) } /* Name.Builtin.Pseudo */
	.vc { color: lighten(map-get($colors, "cyan"), 30%) } /* Name.Variable.Class */
	.vg { color: lighten(map-get($colors, "cyan"), 30%) } /* Name.Variable.Global */
	.vi { color: lighten(map-get($colors, "cyan"), 30%) } /* Name.Variable.Instance */
	.il { color: lighten(map-get($colors, "blue"), 30%) } /* Literal.Number.Integer.Long */
}

p, li, td  {

	> kbd,
	> code {

		font-size: 		inherit;
		font-weight: 	normal;

		@include toggleColor(color, "code-color");
		@include toggleColor(background, "code-background");

		border-radius: 	5px;
		padding:		0 3px;

	}

}

pre {
	display: block;
	position: relative;

	overflow-x: scroll;

	@include toggleColor(color, "code-color");
	@include toggleColor(background, "code-background");

	font-family: $font-family;

	padding: $font-size--p--xs;
	@include toggleSizes(
		margin,
		$padding--p--xs,
		$padding--p--sm,
		$padding--p--md,
		$padding--p--lg,
		$padding--p--xl
	);

	code {
		@include toggleSizes(
			font-size,
			$font-size--p--xs,
			$font-size--p--sm,
			$font-size--p--md,
			$font-size--p--lg,
			$font-size--p--xl
		);
		@include toggleSizes(
			line-height,
			$line-height--p--xs,
			$line-height--p--sm,
			$line-height--p--md,
			$line-height--p--lg,
			$line-height--p--xl
		);
	}

}
